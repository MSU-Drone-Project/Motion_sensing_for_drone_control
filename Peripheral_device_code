//Peripheral device
#include <ArduinoBLE.h>

BLEService droneService("19B10000-E8F2-537E-4F6C-D104768A1214"); // BLE drone Service

// BLE LED Switch Characteristic - custom 128-bit UUID, read and writable by central
BLEByteCharacteristic ascendCharacteristic("19B10002-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
BLEByteCharacteristic descendCharacteristic("19B10003-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
BLEByteCharacteristic gestureCharacteristic("19B10005-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);

// variables for button                      
const int ascendLED = 3;                         
const int descendLED = 4;                                              
const int gestureLED = 6;  

void setup() {
  Serial.begin(9600);
  while (!Serial);

  // use the LED as an output
  pinMode(ascendLED, OUTPUT); 
  pinMode(descendLED, OUTPUT); 
  pinMode(gestureLED, OUTPUT); 

    // begin initialization
  if (!BLE.begin()) {
    Serial.println("starting BLE failed!");

    while (1);
  }

    // set the local name peripheral advertises
  BLE.setLocalName("BLE Peripheral - Drone");
  
  // set the UUID for the service this peripheral advertises:
  BLE.setAdvertisedService(droneService);

  // add the characteristics to the service
  droneService.addCharacteristic(ascendCharacteristic);
  droneService.addCharacteristic(descendCharacteristic);
  droneService.addCharacteristic(gestureCharacteristic);

  // add the service
  BLE.addService(droneService);

  // set the initial value for the characeristic
  ascendCharacteristic.writeValue(0);
  descendCharacteristic.writeValue(0);
  gestureCharacteristic.writeValue(0);

  // start advertising
  BLE.advertise();

  Serial.println("Drone peripheral device waiting for connection");
}

void loop() {
  // listen for BLE peripherals to connect:
  BLEDevice central = BLE.central();

  // if a central is connected to peripheral:
  if (central) {
    Serial.print("Connected to BLE Central - Remote control");

    // while the central is still connected to peripheral:
    while (central.connected()) {
    
      // LED to show devices are connected, power is on
      //digitalWrite(powerOnLED, HIGH);
      digitalWrite(descendLED, HIGH);
      Serial.println("Drone - connected to remote controller, powered on and stationary");

      // device writes to the characteristic, lighting LEDs
      if (ascendCharacteristic.written()) {
        Serial.println("Drone - has ascended");
        digitalWrite(ascendLED, HIGH);
        digitalWrite(descendLED, LOW);
        if (ascendCharacteristic.written() && gestureCharacteristic.written()) {
          Serial.println("Drone - is ready to perform gesture");
          digitalWrite(gestureLED, HIGH);
          delay(5000);
          digitalWrite(gestureLED,LOW);
        } 
        else if (descendCharacteristic.written()) {
          digitalWrite(descendLED, HIGH);
          digitalWrite(ascendLED, LOW);
        }
        else if (descendCharacteristic.written()) {
           digitalWrite(descendLED, HIGH);
        digitalWrite(ascendLED, LOW);
        }
      }
    } // end while    
    // when the central disconnects
    Serial.print("Disconnected from BLE Central - Remote control");
  } //end connection with central
} //end loop
